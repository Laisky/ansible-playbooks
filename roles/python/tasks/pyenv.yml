---
- name: Is pyenv exists.
  tags:
    - python
    - pyenv
  shell: "pyenv --version | echo ''"
  args:
    executable: /bin/bash
  register: is_pyenv_installed

- name: Clone pyenv repository.
  tags:
    - python
    - pyenv
  git: repo=https://github.com/yyuu/pyenv.git
       dest={{home}}/.pyenv
       depth=1
  when: is_pyenv_installed.stdout == ''

- name: Ensure fragments bash dir exits.
  tags:
    - python
    - pyenv
  file: dest={{home}}/.bash.d/ state=directory

- name: Install pyenv bash file.
  tags:
    - python
    - pyenv
  template: src=pyenv.bash dest={{home}}/.bash.d/pyenv.bash mode=0774 force=yes

- name: Make sure pyenv not existed in bashrc.
  tags:
    - python
    - pyenv
  shell: cat {{home}}/.bashrc | grep pyenv || echo ''
  register: is_pyenv_existed
# - debug: var=is_pyenv_existed

- name: add pyenv to .bashrc.
  tags:
    - python
    - pyenv
  lineinfile:
    line: "source {{home}}/.bash.d/pyenv.bash"
    dest: "{{home}}/.bashrc"
  when: is_pyenv_existed.stdout == ''

- name: source bashrc
  tags:
    - python
    - pyenv
  shell: "source {{home}}/.bashrc"
  args:
    executable: /bin/bash

- name: Make sure python 2.7.18 has been installed.
  tags:
    - python
    - pyenv
  shell: "pyenv versions | grep 2.7.18 || echo ''"
  args:
    executable: /bin/bash
  register: is_27_installed

- name: Make sure python 3.8.8 has been installed.
  tags:
    - python
    - pyenv
  shell: "pyenv versions | grep 3.8.8 || echo ''"
  args:
    executable: /bin/bash
  register: is_38_installed

- name: Install python 2.7.18.
  tags:
    - python
    - pyenv
  shell: "pyenv install 2.7.18"
  args:
    executable: /bin/bash
  when: is_27_installed.stdout == ''

- name: Install python 3.8.8.
  tags:
    - python
    - pyenv
  shell: "pyenv install 3.8.8"
  args:
    executable: /bin/bash
  when: is_38_installed.stdout == ''

- name: Make 3.8 default
  tags:
    - python
    - pyenv
  shell: "pyenv global 3.8.8"
  args:
    executable: /bin/bash

# sometimes strange
# pyenv could install python without pip
# so you need to double check whether the pip has been installed successfully.
- name: Double check pip2
  tags:
    - python
    - pyenv
  shell: "{{pyenv}}/versions/2.7.18/bin/pip --version | cut -c 1-3"
  ignore_errors: yes
  register: is_pip2_installed

- name: Double check pip3
  tags:
    - python
    - pyenv
  shell: "{{pyenv}}/versions/3.8.8/bin/pip --version | cut -c 1-3"
  ignore_errors: yes
  register: is_pip3_installed

- name: Reinstall pip2
  tags:
    - python
    - pyenv
  shell: "{{pyenv}}/versions/2.7.18/bin/easy_install pip"
  when: is_pip2_installed.stdout != 'pip'

- name: Reinstall pip3
  tags:
    - python
    - pyenv
  shell: "{{pyenv}}/versions/3.8.8/bin/easy_install pip"
  when: is_pip3_installed.stdout != 'pip'

- name: Upgrade pip.
  tags:
    - python
    - pyenv
  shell: "{{pyenv}}/versions/3.8.8/bin/pip install --upgrade pip && {{pyenv}}/versions/2.7.18/bin/pip install --upgrade pip"
